plugin.tx_solr {

	enabled = {$plugin.tx_solr.enabled}

	enableDebugMode = 0

	general {
		dateFormat.date = d.m.Y H:i
	}

	solr {
		scheme = {$plugin.tx_solr.solr.scheme}
		host   = {$plugin.tx_solr.solr.host}
		port   = {$plugin.tx_solr.solr.port}
		path   = {$plugin.tx_solr.solr.path}
		username = {$plugin.tx_solr.solr.username}
		password = {$plugin.tx_solr.solr.password}
	}

	index {
		additionalFields {

		}

		// assigns processing instructions to Solr fields during indexing, Solr field = processing instruction
		fieldProcessingInstructions {
			changed = timestampToIsoDate
			created = timestampToIsoDate
			endtime = timestampToUtcIsoDate
			rootline = pageUidToHierarchy
		}

		queue {

			// mapping tableName.fields.SolrFieldName => TableFieldName (+ cObj processing)

			pages = 1
			pages {
				initialization = ApacheSolrForTypo3\Solr\IndexQueue\Initializer\Page

				// allowed page types (doktype) when indexing records from table "pages"
				allowedPageTypes = 1,7,4

				indexingPriority = 0

				indexer = ApacheSolrForTypo3\Solr\IndexQueue\PageIndexer
				indexer {
					// add options for the indexer here
				}

				// Only index standard pages and mount points that are not overlayed.
				additionalWhereClause = (doktype = 1 OR doktype=4 OR (doktype=7 AND mount_pid_ol=0)) AND no_search = 0

				//exclude some html parts inside TYPO3SEARCH markers by classname (comma list)
				excludeContentByClass = typo3-search-exclude

				fields {
					sortSubTitle_stringS = subtitle
				}
			}

		}
	}

	search {
		// fields that are allowed to contain html and should be skipped during escaping after retrieval from Solr
		// by default all fields except url get escaped, you might need to add other url fields here as well because of &
		// characters in the url.
		trustedFields = url

		targetPage = {$plugin.tx_solr.search.targetPage}

		initializeWithEmptyQuery = 0
		showResultsOfInitialEmptyQuery = 0

		initializeWithQuery =
		showResultsOfInitialQuery = 0

		keepExistingParametersForNewSearches = 0

		ignoreGlobalQParameter = 0

		query {
			allowEmptyQuery = 0

			allowedSites = __solr_current_site

			// qf parameter http://wiki.apache.org/solr/DisMaxQParserPlugin#qf_.28Query_Fields.29
			queryFields = content^40.0, title^5.0, keywords^2.0, tagsH1^5.0, tagsH2H3^3.0, tagsH4H5H6^2.0, tagsInline^1.0, description^4.0, abstract^1.0, subtitle^1.0, navtitle^1.0, author^1.0

			// fl parameter http://wiki.apache.org/solr/CommonQueryParameters#fl
			returnFields = *, score

			// see http://wiki.apache.org/solr/DisMaxRequestHandler#mm_.28Minimum_.27Should.27_Match.29
			minimumMatch =

			// see http://wiki.apache.org/solr/DisMaxRequestHandler#bf_.28Boost_Functions.29
			boostFunction =

			// see http://wiki.apache.org/solr/DisMaxQParserPlugin#bq_.28Boost_Query.29
			boostQuery =

			filter {

			}

			sortBy =
		}

		results {
			resultsHighlighting = 0
			resultsHighlighting {
				highlightFields = content
				fragmentSize = 200
				fragmentSeparator = [...]

				wrap = <span class="results-highlight">|</span>
			}
			siteHighlighting = 0

			resultsPerPage = {$plugin.tx_solr.search.results.resultsPerPage}
			resultsPerPageSwitchOptions = 10, 25, 50

			showDocumentScoreAnalysis = 0
		}

		spellchecking = 0
		spellchecking {
			wrap = |<div class="spelling-suggestions">###LLL:didYouMean### |</div>|
			searchUsingSpellCheckerSuggestion = 0
			numberOfSuggestionsToTry = 1
		}

		lastSearches = 0
		lastSearches {
			limit = 10
			// tracking mode "user" or "global"
			mode = user
		}

		frequentSearches = 0
		frequentSearches {
			useLowercaseKeywords = 0

			minSize = 14
			maxSize = 32
			limit = 20

			select {
				SELECT = keywords as search_term, count(*) as hits
				FROM = tx_solr_statistics
				ADD_WHERE = AND num_found != 0
				GROUP_BY = keywords
				ORDER_BY = hits DESC, search_term ASC
				checkRootPageId = 1
				checkLanguage = 1
			}

			// cache lifetime in seconds (default is 86400s = 24h)
			cacheLifetime = 86400
		}

		sorting = 0
		sorting {
			defaultOrder = asc

			options {
				relevance {
					field = relevance
					label = Relevance
				}

				title {
					field = sortTitle
					label = Title
				}

				type {
					field = type
					label = Type
				}

				author {
					field = sortAuthor
					label = Author
				}

				created {
					field = created
					label = Creation Date
				}
			}
		}

		faceting = 0
		faceting {
			minimumCount = 1
			sortBy = count
			limit = 10
			singleFacetMode = 0
			showEmptyFacets = 0
			keepAllFacetsOnSelection = 0

			facetLinkUrlParameters =

			facets {
				type {
					label = Content Type
					field = type
				}
			}

			showAllLink.wrap = <li>|</li>
		}

		elevation = 0
		elevation {
			markElevatedResults = 1
			forceElevation = 1
		}

		variants = 0
		variants {
			expand = 1
			// variantField needs to be a string or a numeric field
			variantField = variantId
			limit = 10
		}
	}

	suggest = 0
	suggest {
		numberOfSuggestions = 10
		suggestField = spell
		forceHttps = 0
	}

	statistics = 0
	statistics {
		anonymizeIP = 0
	}

	view {
		pluginNamespace = tx_solr

        // By convention the templates is loaded from EXT:solr/Resources/Private/Templates/Frontend/Search/(ActionName).html
        // If you want to define a different entry template, you can do this here to overwrite the conventional default template
        // if you want to use FLUID fallbacks you can just configure the template name, otherwise you could also use a full reference EXT:/.../
        // The templates that you configure in availableTemplate can be used in the flexform by the editor to select a template for the concrete plugin instance.
        templateFiles {
            //	results = Results
            //	results.availableTemplates {
            // 		default {
            // 			label = Default Searchresults Template
            // 			file = Results
            // 		}
            //	}
            //	form = Form
            //	form.availableTemplates {
            //	 	default {
            //			label = Default Searchform Template
            //			file = Form
            // 		}
            // }
            //	frequentSearched = FrequentlySearched
        }
	}

	logging {
		exceptions = 1
		debugOutput = 0

		indexing {
			indexQueueInitialization = 0
			missingTypo3SearchMarkers = 1
			pageIndexed = 0

			queue {
				pages = 0
			}
		}

		query {
			filters = 0
			searchWords = 0
			queryString = 0
			rawPost = 0
			rawGet = 0
			rawDelete = 0
		}
	}

	features {
		requireCHashArgumentForActionArguments = 0
		useRawDocuments = 1
	}
}
