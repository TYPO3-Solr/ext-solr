<?xml version="1.0" encoding="UTF-8" ?>
<!--
	The schema name property is constructed as follows

	tx_solr		- The extension key
	x-y-z		- The extension version this schema is meant to work with
	YYYYMMDD	- The date the schema file was changed the last time

	When changing the schema the name property must be updated. There is a
	status report - tx_solr_report_SchemaStatus - checking against this
	name property, that status check must be updated as well.
-->
<schema name="tx_solr-3-1-0--20151117" version="1.5" >
	<!-- attribute "name" is the name of this schema and is only used for display purposes.
		Applications should change this to reflect the nature of the search collection.
		version="1.4" is Solr's version number for the schema syntax and semantics.  It should
		not normally be changed by applications.
		1.0: multiValued attribute did not exist, all fields are multiValued by nature
		1.1: multiValued attribute introduced, false by default 
		1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
		1.3: removed optional field compress feature
		1.4: default auto-phrase (QueryParser feature) to off
		1.5: omitNorms defaults to true for primitive field types (int, float, boolean, string...)
	-->

	<uniqueKey>id</uniqueKey>

	<!-- xinclude fields -->
	<xi:include href="../general_schema_types.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>

	<!--  xinclude fields-->
	<xi:include href="../general_schema_fields.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>


	<!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
		words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
		so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
		Synonyms and stopwords are customized by external files, and stemming is enabled.
		Duplicate tokens at the same position (which may result from Stemmed Synonyms or
		WordDelim parts) are removed.
	-->
	<fieldType name="text" class="solr.TextField" positionIncrementGap="100">
		<analyzer type="index">
			<tokenizer class="solr.WhitespaceTokenizerFactory"/>

			<filter class="solr.WordDelimiterFilterFactory"
				generateWordParts="1"
				generateNumberParts="1"
				catenateWords="1"
				catenateNumbers="1"
				catenateAll="0"
				splitOnCaseChange="1"
				preserveOriginal="1"
			/>
			<filter class="solr.LowerCaseFilterFactory"/>

			<filter class="solr.ManagedSynonymFilterFactory" managed="basque"/>
			<filter class="solr.ManagedStopFilterFactory" managed="basque"/>

			<filter class="solr.SnowballPorterFilterFactory" language="Basque" protected="basque/protwords.txt"/>
			<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
		</analyzer>
		<analyzer type="query">
			<tokenizer class="solr.WhitespaceTokenizerFactory"/>

			<filter class="solr.WordDelimiterFilterFactory"
				generateWordParts="1"
				generateNumberParts="1"
				catenateWords="0"
				catenateNumbers="0"
				catenateAll="0"
				splitOnCaseChange="1"
				preserveOriginal="1"
			/>
			<filter class="solr.LowerCaseFilterFactory"/>

			<filter class="solr.ManagedSynonymFilterFactory" managed="basque"/>
			<filter class="solr.ManagedStopFilterFactory" managed="basque"/>

			<filter class="solr.SnowballPorterFilterFactory" language="Basque" protected="basque/protwords.txt"/>
			<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
		</analyzer>
	</fieldType>


	<!-- Less flexible matching, but less false matches.	Probably not ideal for product names,
		but may be good for SKUs.	Can insert dashes in the wrong place and still match. -->
	<fieldType name="textTight" class="solr.TextField" positionIncrementGap="100" >
		<analyzer>
			<tokenizer class="solr.WhitespaceTokenizerFactory"/>

			<filter class="solr.LowerCaseFilterFactory"/>

			<filter class="solr.ManagedSynonymFilterFactory" managed="basque"/>
			<filter class="solr.ManagedStopFilterFactory" managed="basque"/>

			<filter class="solr.WordDelimiterFilterFactory"
				generateWordParts="0"
				generateNumberParts="0"
				catenateWords="1"
				catenateNumbers="1"
				catenateAll="0"
				preserveOriginal="1"
			/>

			<filter class="solr.SnowballPorterFilterFactory" language="Basque" protected="basque/protwords.txt"/>
			<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
		</analyzer>
	</fieldType>

	<!-- Setup simple analysis for spell checking -->
	<fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100" omitNorms="true">
		<analyzer type="index">
			<tokenizer class="solr.StandardTokenizerFactory"/>

			<filter class="solr.LowerCaseFilterFactory"/>

			<filter class="solr.ManagedStopFilterFactory" managed="basque"/>

			<filter class="solr.StandardFilterFactory" />
			<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
		</analyzer>
		<analyzer type="query">
			<tokenizer class="solr.StandardTokenizerFactory" />

			<filter class="solr.LowerCaseFilterFactory"/>

			<filter class="solr.ManagedSynonymFilterFactory" managed="basque"/>
			<filter class="solr.ManagedStopFilterFactory" managed="basque"/>

			<filter class="solr.StandardFilterFactory" />
			<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
		</analyzer>
	</fieldType>

</schema>